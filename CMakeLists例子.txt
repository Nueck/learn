cmake_minimum_required(VERSION 2.9)
project(pro)

option(CUDA_USE_STATIC_CUDA_RUNTIME TRUE)
set(CMAKE_CXX_STANDARD 17)
set(CMAKE_BUILD_TYPE Debug)

if(MSVC)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /FS")
endif()

#if(MSVC)
#    add_compile_options(
#        $<$<CONFIG:>:/MT> #---------|
#        $<$<CONFIG:Debug>:/MTd> #---|-- Statically link the runtime libraries
#        $<$<CONFIG:Release>:/MT> #--|
#    )
#endif()

set(EXECUTABLE_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/workspace)

# 如果你是不同显卡，请设置为显卡对应的号码参考这里：https://developer.nvidia.com/zh-cn/cuda-gpus#compute
set(CUDA_GEN_CODE "-gencode=arch=compute_89,code=sm_89")

#设置OpenCV路径
#set(OpenCV_DIR C:/Users/Administrator/Code/libs/opencv/build)
set(CUDA_TOOLKIT_ROOT_DIR "C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v12.3")

# 设置CUDA路径
set(TENSORRT_DIR "C:/Users/Administrator/Code/libs/TensorRT-8.6.1.6")

# 因为protobuf，需要用特定版本，所以这里指定路径
set(PROTOBUF_DIR "C:/Program Files/protobuf")

find_package(CUDA REQUIRED)
find_package(OpenCV  REQUIRED)

file(GLOB_RECURSE cpp_srcs ${PROJECT_SOURCE_DIR}/src/*.cpp)
file(GLOB_RECURSE cuda_srcs ${PROJECT_SOURCE_DIR}/src/*.cu ${PROJECT_SOURCE_DIR}/src/*.cuh)


#添加下面的所有的头文件
include_directories(${PROJECT_SOURCE_DIR}/src)
if(OpenCV_FOUND)
    include_directories(${OpenCV_INCLUDE_DIRS})
    link_directories(${OpenCV_LIBRARY_DIRS})
endif ()

include_directories(
        ${PROJECT_SOURCE_DIR}/src
        ${CUDA_TOOLKIT_ROOT_DIR}/include
        ${PROTOBUF_DIR}/include
        ${TENSORRT_DIR}/include
        ${CUDNN_DIR}/include
)

# 切记，protobuf的lib目录一定要比tensorRT目录前面，因为tensorRTlib下带有protobuf的so文件
# 这可能带来错误
link_directories(
        ${PROTOBUF_DIR}/lib
        ${TENSORRT_DIR}/lib
        ${CUDA_TOOLKIT_ROOT_DIR}/lib/x64
        ${CUDNN_DIR}/lib
)

set(CUDA_NVCC_FLAGS "${CUDA_NVCC_FLAGS} -std=c++17 -O0 -Xcompiler -fPIC -g -w ${CUDA_GEN_CODE}")
#set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++17 -Wall -O0 -Wfatal-errors -pthread -w -g")

cuda_add_library(plugin_list STATIC ${cuda_srcs})
target_link_libraries(plugin_list nvinfer nvinfer_plugin)
target_link_libraries(plugin_list cuda cublas cudart cudnn)
target_link_libraries(plugin_list libprotobuf)
target_link_libraries(plugin_list ${OpenCV_LIBS})

add_executable(pro ${cpp_srcs} src/main.cpp
        src/timer.hpp)

#target_link_libraries(pro nvinfer nvinfer_plugin)
#target_link_libraries(pro cuda cublas cudart cudnn)
#target_link_libraries(pro libprotobuf)
#target_link_libraries(pro ${OpenCV_LIBS})

#link_directories(${PROJECT_SOURCE_DIR}/build_msvc/Release)

# 如果提示插件找不到，请使用dlopen(xxx.so, NOW)的方式手动加载可以解决插件找不到问题
target_link_libraries(pro plugin_list)